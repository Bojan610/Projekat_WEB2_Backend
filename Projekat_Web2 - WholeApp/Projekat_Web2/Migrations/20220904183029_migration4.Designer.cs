// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekat_Web2.Infrastructure;

namespace Projekat_Web2.Migrations
{
    [DbContext(typeof(WebAppDbContext))]
    [Migration("20220904183029_migration4")]
    partial class migration4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsumerProduct", b =>
                {
                    b.Property<string>("ConsumersEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("ConsumersEmail", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ConsumerProduct");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Projekat_Web2.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerCurrentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DelivererCurrentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DelivererEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerCurrentID")
                        .IsUnique()
                        .HasFilter("[ConsumerCurrentID] IS NOT NULL");

                    b.HasIndex("DelivererCurrentID")
                        .IsUnique()
                        .HasFilter("[DelivererCurrentID] IS NOT NULL");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Projekat_Web2.Models.OrderProductDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConsumerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DelivererId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderProductDetails");
                });

            modelBuilder.Entity("Projekat_Web2.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ingredients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Projekat_Web2.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserKind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Projekat_Web2.Models.Admin", b =>
                {
                    b.HasBaseType("Projekat_Web2.Models.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("Projekat_Web2.Models.Consumer", b =>
                {
                    b.HasBaseType("Projekat_Web2.Models.User");

                    b.HasDiscriminator().HasValue("Consumer");
                });

            modelBuilder.Entity("Projekat_Web2.Models.Deliverer", b =>
                {
                    b.HasBaseType("Projekat_Web2.Models.User");

                    b.Property<string>("Verified")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Deliverer");
                });

            modelBuilder.Entity("ConsumerProduct", b =>
                {
                    b.HasOne("Projekat_Web2.Models.Consumer", null)
                        .WithMany()
                        .HasForeignKey("ConsumersEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekat_Web2.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Projekat_Web2.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekat_Web2.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projekat_Web2.Models.Order", b =>
                {
                    b.HasOne("Projekat_Web2.Models.Consumer", "ConsumerCurrent")
                        .WithOne("CurrentOrder_Con")
                        .HasForeignKey("Projekat_Web2.Models.Order", "ConsumerCurrentID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Projekat_Web2.Models.Deliverer", "DelivererCurrent")
                        .WithOne("CurrentOrder_Del")
                        .HasForeignKey("Projekat_Web2.Models.Order", "DelivererCurrentID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ConsumerCurrent");

                    b.Navigation("DelivererCurrent");
                });

            modelBuilder.Entity("Projekat_Web2.Models.Consumer", b =>
                {
                    b.Navigation("CurrentOrder_Con");
                });

            modelBuilder.Entity("Projekat_Web2.Models.Deliverer", b =>
                {
                    b.Navigation("CurrentOrder_Del");
                });
#pragma warning restore 612, 618
        }
    }
}
